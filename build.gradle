buildscript { 
	repositories { 
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		maven { url 'https://maven.aliyun.com/repository/public' } 
		maven { url 'https://maven.aliyun.com/repository/jcenter'} 
	}
	allprojects { 
		repositories { 
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url 'https://maven.aliyun.com/repository/google' }
		maven { url 'https://maven.aliyun.com/repository/public' } 
		maven { url 'https://maven.aliyun.com/repository/jcenter'} 
		} 
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

plugins {
  id 'org.jetbrains.intellij' version '0.3.12'
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceSets {
  main {
    java.srcDir 'src'
    resources.srcDir 'resources'
  }
  test {
    java.srcDir 'test'
  }
}

intellij {
  version ideaVersion
  pluginName 'IdeaVim'
  updateSinceUntilBuild false
  downloadSources Boolean.valueOf(downloadIdeaSources)
  instrumentCode Boolean.valueOf(instrumentPluginCode)

  publishPlugin {
    channels publishChannels.split(',')
    username publishUsername
    password publishPassword
  }
}

repositories {
  //mavenCentral()
	maven { url 'https://plugins.gradle.org/m2/' }
	maven { url 'https://maven.aliyun.com/repository/google' }
	maven { url 'https://maven.aliyun.com/repository/public' } 
		maven { url 'https://maven.aliyun.com/repository/jcenter'} 

}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  compile "org.jetbrains.kotlin:kotlin-runtime:$kotlinVersion"
}
